[1mdiff --git a/app/Http/Controllers/Settings/PasswordController.php b/app/Http/Controllers/Settings/PasswordController.php[m
[1mindex 33d5a60..6ff90c7 100644[m
[1m--- a/app/Http/Controllers/Settings/PasswordController.php[m
[1m+++ b/app/Http/Controllers/Settings/PasswordController.php[m
[36m@@ -3,37 +3,28 @@[m
 namespace App\Http\Controllers\Settings;[m
 [m
 use App\Http\Controllers\Controller;[m
[31m-use Illuminate\Http\RedirectResponse;[m
 use Illuminate\Http\Request;[m
 use Illuminate\Support\Facades\Hash;[m
[31m-use Illuminate\Validation\Rules\Password;[m
[31m-use Inertia\Inertia;[m
[31m-use Inertia\Response;[m
[32m+[m[32muse Illuminate\Validation\Rules\Password as PasswordRule;[m
 [m
 class PasswordController extends Controller[m
 {[m
[31m-    /**[m
[31m-     * Show the user's password settings page.[m
[31m-     */[m
[31m-    public function edit(): Response[m
[32m+[m[32m    public function edit()[m
     {[m
[31m-        return Inertia::render('settings/Password');[m
[32m+[m[32m        return inertia('settings/Password');[m
     }[m
 [m
[31m-    /**[m
[31m-     * Update the user's password.[m
[31m-     */[m
[31m-    public function update(Request $request): RedirectResponse[m
[32m+[m[32m    public function update(Request $request)[m
     {[m
         $validated = $request->validate([[m
             'current_password' => ['required', 'current_password'],[m
[31m-            'password' => ['required', Password::defaults(), 'confirmed'],[m
[32m+[m[32m            'password'         => ['required', 'confirmed', PasswordRule::defaults()],[m
         ]);[m
 [m
[31m-        $request->user()->update([[m
[32m+[m[32m        $request->user()->forceFill([[m
             'password' => Hash::make($validated['password']),[m
[31m-        ]);[m
[32m+[m[32m        ])->save();[m
 [m
[31m-        return back();[m
[32m+[m[32m        return back()->with('status', 'password-updated');[m
     }[m
 }[m
[1mdiff --git a/app/Http/Middleware/HandleInertiaRequests.php b/app/Http/Middleware/HandleInertiaRequests.php[m
[1mindex bd89013..2cfe793 100644[m
[1m--- a/app/Http/Middleware/HandleInertiaRequests.php[m
[1m+++ b/app/Http/Middleware/HandleInertiaRequests.php[m
[36m@@ -2,50 +2,29 @@[m
 [m
 namespace App\Http\Middleware;[m
 [m
[31m-use Illuminate\Foundation\Inspiring;[m
 use Illuminate\Http\Request;[m
 use Inertia\Middleware;[m
 [m
 class HandleInertiaRequests extends Middleware[m
 {[m
[31m-    /**[m
[31m-     * The root template that's loaded on the first page visit.[m
[31m-     *[m
[31m-     * @see https://inertiajs.com/server-side-setup#root-template[m
[31m-     *[m
[31m-     * @var string[m
[31m-     */[m
[31m-    protected $rootView = 'app';[m
[32m+[m[32m    /** Root template loaded on first visit */[m
[32m+[m[32m    protected $rootView = 'app'; // ensure resources/views/app.blade.php exists[m
 [m
[31m-    /**[m
[31m-     * Determines the current asset version.[m
[31m-     *[m
[31m-     * @see https://inertiajs.com/asset-versioning[m
[31m-     */[m
     public function version(Request $request): ?string[m
     {[m
         return parent::version($request);[m
     }[m
 [m
[31m-    /**[m
[31m-     * Define the props that are shared by default.[m
[31m-     *[m
[31m-     * @see https://inertiajs.com/shared-data[m
[31m-     *[m
[31m-     * @return array<string, mixed>[m
[31m-     */[m
     public function share(Request $request): array[m
     {[m
[31m-        [$message, $author] = str(Inspiring::quotes()->random())->explode('-');[m
[31m-[m
[31m-        return [[m
[31m-            ...parent::share($request),[m
[31m-            'name' => config('app.name'),[m
[31m-            'quote' => ['message' => trim($message), 'author' => trim($author)],[m
[31m-            'auth' => [[m
[32m+[m[32m        return array_merge(parent::share($request), [[m
[32m+[m[32m            'auth' => fn () => [[m
                 'user' => $request->user(),[m
             ],[m
[31m-            'sidebarOpen' => ! $request->hasCookie('sidebar_state') || $request->cookie('sidebar_state') === 'true',[m
[31m-        ];[m
[32m+[m[32m            'flash' => [[m
[32m+[m[32m                'success' => fn () => $request->session()->get('success'),[m
[32m+[m[32m                'error'   => fn () => $request->session()->get('error'),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ]);[m
     }[m
 }[m
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex fd36a3a..978e8ba 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -19,6 +19,8 @@[m
       "devDependencies": {[m
         "@eslint/js": "^9.19.0",[m
         "@laravel/vite-plugin-wayfinder": "^0.1.7",[m
[32m+[m[32m        "@tailwindcss/forms": "^0.5.10",[m
[32m+[m[32m        "@tailwindcss/postcss": "^4.1.14",[m
         "@tailwindcss/vite": "^4.1.11",[m
         "@types/node": "^22.13.5",[m
         "@vitejs/plugin-vue": "^6.0.1",[m
[36m@@ -45,6 +47,19 @@[m
         "lightningcss-linux-x64-gnu": "^1.29.1"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/@alloc/quick-lru": {[m
[32m+[m[32m      "version": "5.2.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=10"[m
[32m+[m[32m      },[m
[32m+[m[32m      "funding": {[m
[32m+[m[32m        "url": "https://github.com/sponsors/sindresorhus"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/@babel/helper-string-parser": {[m
       "version": "7.27.1",[m
       "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",[m
[36m@@ -1296,6 +1311,19 @@[m
         "tslib": "^2.8.0"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/@tailwindcss/forms": {[m
[32m+[m[32m      "version": "0.5.10",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/forms/-/forms-0.5.10.tgz",[m
[32m+[m[32m      "integrity": "sha512-utI1ONF6uf/pPNO68kmN1b8rEwNXv3czukalo8VtJH8ksIkZXr3Q3VYudZLkCsDd4Wku120uF02hYK25XGPorw==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "mini-svg-data-uri": "^1.2.3"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "tailwindcss": ">=3.0.0 || >= 3.0.0-alpha.1 || >= 4.0.0-alpha.20 || >= 4.0.0-beta.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/@tailwindcss/node": {[m
       "version": "4.1.13",[m
       "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.13.tgz",[m
[36m@@ -1564,6 +1592,282 @@[m
         "node": ">= 10"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/postcss/-/postcss-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-BdMjIxy7HUNThK87C7BC8I1rE8BVUsfNQSI5siQ4JK3iIa3w0XyVvVL9SXLWO//CtYTcp1v7zci0fYwJOjB+Zg==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@alloc/quick-lru": "^5.2.0",[m
[32m+[m[32m        "@tailwindcss/node": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide": "4.1.14",[m
[32m+[m[32m        "postcss": "^8.4.41",[m
[32m+[m[32m        "tailwindcss": "4.1.14"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/node": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-hpz+8vFk3Ic2xssIA3e01R6jkmsAhvkQdXlEbRTk6S10xDAtiQiM3FyvZVGsucefq764euO/b8WUW9ysLdThHw==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@jridgewell/remapping": "^2.3.4",[m
[32m+[m[32m        "enhanced-resolve": "^5.18.3",[m
[32m+[m[32m        "jiti": "^2.6.0",[m
[32m+[m[32m        "lightningcss": "1.30.1",[m
[32m+[m[32m        "magic-string": "^0.30.19",[m
[32m+[m[32m        "source-map-js": "^1.2.1",[m
[32m+[m[32m        "tailwindcss": "4.1.14"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-23yx+VUbBwCg2x5XWdB8+1lkPajzLmALEfMb51zZUBYaYVPDQvBSD/WYDqiVyBIo2BZFa3yw1Rpy3G2Jp+K0dw==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "hasInstallScript": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "detect-libc": "^2.0.4",[m
[32m+[m[32m        "tar": "^7.5.1"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      },[m
[32m+[m[32m      "optionalDependencies": {[m
[32m+[m[32m        "@tailwindcss/oxide-android-arm64": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-darwin-arm64": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-darwin-x64": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-freebsd-x64": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-linux-arm64-musl": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-linux-x64-gnu": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-linux-x64-musl": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-wasm32-wasi": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.14",[m
[32m+[m[32m        "@tailwindcss/oxide-win32-x64-msvc": "4.1.14"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-android-arm64": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-a94ifZrGwMvbdeAxWoSuGcIl6/DOP5cdxagid7xJv6bwFp3oebp7y2ImYsnZBMTwjn5Ev5xESvS3FFYUGgPODQ==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "arm64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "android"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-darwin-arm64": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-HkFP/CqfSh09xCnrPJA7jud7hij5ahKyWomrC3oiO2U9i0UjP17o9pJbxUN0IJ471GTQQmzwhp0DEcpbp4MZTA==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "arm64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "darwin"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-darwin-x64": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-eVNaWmCgdLf5iv6Qd3s7JI5SEFBFRtfm6W0mphJYXgvnDEAZ5sZzqmI06bK6xo0IErDHdTA5/t7d4eTfWbWOFw==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "x64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "darwin"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-freebsd-x64": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-QWLoRXNikEuqtNb0dhQN6wsSVVjX6dmUFzuuiL09ZeXju25dsei2uIPl71y2Ic6QbNBsB4scwBoFnlBfabHkEw==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "x64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "freebsd"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-VB4gjQni9+F0VCASU+L8zSIyjrLLsy03sjcR3bM0V2g4SNamo0FakZFKyUQ96ZVwGK4CaJsc9zd/obQy74o0Fw==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "arm"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "linux"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-linux-arm64-gnu": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-qaEy0dIZ6d9vyLnmeg24yzA8XuEAD9WjpM5nIM1sUgQ/Zv7cVkharPDQcmm/t/TvXoKo/0knI3me3AGfdx6w1w==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "arm64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "linux"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-linux-arm64-musl": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-ISZjT44s59O8xKsPEIesiIydMG/sCXoMBCqsphDm/WcbnuWLxxb+GcvSIIA5NjUw6F8Tex7s5/LM2yDy8RqYBQ==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "arm64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "linux"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-linux-x64-gnu": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-02c6JhLPJj10L2caH4U0zF8Hji4dOeahmuMl23stk0MU1wfd1OraE7rOloidSF8W5JTHkFdVo/O7uRUJJnUAJg==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "x64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "linux"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-linux-x64-musl": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-TNGeLiN1XS66kQhxHG/7wMeQDOoL0S33x9BgmydbrWAb9Qw0KYdd8o1ifx4HOGDWhVmJ+Ul+JQ7lyknQFilO3Q==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "x64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "linux"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-wasm32-wasi": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-uZYAsaW/jS/IYkd6EWPJKW/NlPNSkWkBlaeVBi/WsFQNP05/bzkebUL8FH1pdsqx4f2fH/bWFcUABOM9nfiJkQ==",[m
[32m+[m[32m      "bundleDependencies": [[m
[32m+[m[32m        "@napi-rs/wasm-runtime",[m
[32m+[m[32m        "@emnapi/core",[m
[32m+[m[32m        "@emnapi/runtime",[m
[32m+[m[32m        "@tybys/wasm-util",[m
[32m+[m[32m        "@emnapi/wasi-threads",[m
[32m+[m[32m        "tslib"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "wasm32"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@emnapi/core": "^1.5.0",[m
[32m+[m[32m        "@emnapi/runtime": "^1.5.0",[m
[32m+[m[32m        "@emnapi/wasi-threads": "^1.1.0",[m
[32m+[m[32m        "@napi-rs/wasm-runtime": "^1.0.5",[m
[32m+[m[32m        "@tybys/wasm-util": "^0.10.1",[m
[32m+[m[32m        "tslib": "^2.4.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=14.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-win32-arm64-msvc": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-Az0RnnkcvRqsuoLH2Z4n3JfAef0wElgzHD5Aky/e+0tBUxUhIeIqFBTMNQvmMRSP15fWwmvjBxZ3Q8RhsDnxAA==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "arm64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "win32"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tailwindcss/postcss/node_modules/@tailwindcss/oxide-win32-x64-msvc": {[m
[32m+[m[32m      "version": "4.1.14",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.14.tgz",[m
[32m+[m[32m      "integrity": "sha512-ttblVGHgf68kEE4om1n/n44I0yGPkCPbLsqzjvybhpwa6mKKtgFfAzy6btc3HRmuW7nHe0OOrSeNP9sQmmH9XA==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "x64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "win32"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/@tailwindcss/vite": {[m
       "version": "4.1.13",[m
       "resolved": "https://registry.npmjs.org/@tailwindcss/vite/-/vite-4.1.13.tgz",[m
[36m@@ -4033,6 +4337,16 @@[m
         "node": ">= 0.6"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/mini-svg-data-uri": {[m
[32m+[m[32m      "version": "1.4.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/mini-svg-data-uri/-/mini-svg-data-uri-1.4.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-r9deDe9p5FJUPZAk3A59wGH7Ii9YrjjWw0jmw/liSbHl2CHiyXj6FcDXDu2K3TjVAXqiJdaw3xxwlZZr9E6nHg==",[m
[32m+[m[32m      "dev": true,[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "bin": {[m
[32m+[m[32m        "mini-svg-data-uri": "cli.js"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/minimatch": {[m
       "version": "9.0.5",[m
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",[m
[1mdiff --git a/package.json b/package.json[m
[1mindex b9dcd44..e96a23a 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -12,6 +12,8 @@[m
   "devDependencies": {[m
     "@eslint/js": "^9.19.0",[m
     "@laravel/vite-plugin-wayfinder": "^0.1.7",[m
[32m+[m[32m    "@tailwindcss/forms": "^0.5.10",[m
[32m+[m[32m    "@tailwindcss/postcss": "^4.1.14",[m
     "@tailwindcss/vite": "^4.1.11",[m
     "@types/node": "^22.13.5",[m
     "@vitejs/plugin-vue": "^6.0.1",[m
[1mdiff --git a/resources/css/app.css b/resources/css/app.css[m
[1mindex b5c61c9..255e670 100644[m
[1m--- a/resources/css/app.css[m
[1m+++ b/resources/css/app.css[m
[36m@@ -1,3 +1,3 @@[m
[31m-@tailwind base;[m
[31m-@tailwind components;[m
[31m-@tailwind utilities;[m
[32m+[m[32m/* resources/css/app.css */[m
[32m+[m[32m@import "tailwindcss";[m
[32m+[m[32m/* your custom css can follow… */[m
[1mdiff --git a/resources/js/pages/settings/Password.vue b/resources/js/pages/settings/Password.vue[m
[1mindex 3c6c19f..c577354 100644[m
[1m--- a/resources/js/pages/settings/Password.vue[m
[1m+++ b/resources/js/pages/settings/Password.vue[m
[36m@@ -1,52 +1,95 @@[m
 <script setup lang="ts">[m
[31m-import { ref } from 'vue'[m
[32m+[m[32mimport HeadingSmall from '@/components/HeadingSmall.vue'[m
[32m+[m[32mimport { useForm } from '@inertiajs/vue3'[m
 [m
[31m-const form = ref({[m
[32m+[m[32mconst form = useForm({[m
   current_password: '',[m
   password: '',[m
   password_confirmation: '',[m
 })[m
 [m
[31m-const submitting = ref(false)[m
[31m-[m
[31m-async function submit(e: Event) {[m
[31m-  e.preventDefault()[m
[31m-  submitting.value = true[m
[31m-  try {[m
[31m-    await fetch('/user/password', {[m
[31m-      method: 'PUT',[m
[31m-      headers: { 'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest' },[m
[31m-      body: JSON.stringify(form.value),[m
[31m-    })[m
[31m-    // keep it simple for now[m
[31m-    alert('Submitted (wire up real backend later)')[m
[31m-  } finally {[m
[31m-    submitting.value = false[m
[31m-  }[m
[32m+[m[32mfunction submit() {[m
[32m+[m[32m  form.put('/user/password', {[m
[32m+[m[32m    preserveScroll: true,[m
[32m+[m[32m    onSuccess: () => {[m
[32m+[m[32m      form.reset('current_password', 'password', 'password_confirmation')[m
[32m+[m[32m    },[m
[32m+[m[32m  })[m
 }[m
 </script>[m
 [m
 <template>[m
[31m-  <main class="max-w-xl mx-auto p-6 space-y-6">[m
[31m-    <h1 class="text-2xl font-semibold">Password settings</h1>[m
[32m+[m[32m  <div class="mx-auto max-w-xl p-6">[m
[32m+[m[32m    <HeadingSmall[m
[32m+[m[32m      title="Password settings"[m
[32m+[m[32m      description="Update your account password."[m
[32m+[m[32m    />[m
 [m
[31m-    <form @submit="submit" class="space-y-4">[m
[32m+[m[32m    <form @submit.prevent="submit" class="mt-6 space-y-6">[m
       <div>[m
[31m-        <label class="block text-sm mb-1">Current password</label>[m
[31m-        <input v-model="form.current_password" type="password" class="w-full border rounded px-3 py-2" />[m
[32m+[m[32m        <label for="current_password" class="block text-sm font-medium text-gray-700">[m
[32m+[m[32m          Current password[m
[32m+[m[32m        </label>[m
[32m+[m[32m        <input[m
[32m+[m[32m          v-model="form.current_password"[m
[32m+[m[32m          id="current_password"[m
[32m+[m[32m          name="current_password"[m
[32m+[m[32m          type="password"[m
[32m+[m[32m          autocomplete="current-password"[m
[32m+[m[32m          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm shadow-sm focus:border-black focus:ring-black"[m
[32m+[m[32m        />[m
[32m+[m[32m        <p v-if="form.errors.current_password" class="mt-2 text-sm text-red-600">[m
[32m+[m[32m          {{ form.errors.current_password }}[m
[32m+[m[32m        </p>[m
       </div>[m
[32m+[m
       <div>[m
[31m-        <label class="block text-sm mb-1">New password</label>[m
[31m-        <input v-model="form.password" type="password" class="w-full border rounded px-3 py-2" />[m
[32m+[m[32m        <label for="password" class="block text-sm font-medium text-gray-700">[m
[32m+[m[32m          New password[m
[32m+[m[32m        </label>[m
[32m+[m[32m        <input[m
[32m+[m[32m          v-model="form.password"[m
[32m+[m[32m          id="password"[m
[32m+[m[32m          name="password"[m
[32m+[m[32m          type="password"[m
[32m+[m[32m          autocomplete="new-password"[m
[32m+[m[32m          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm shadow-sm focus:border-black focus:ring-black"[m
[32m+[m[32m        />[m
[32m+[m[32m        <p v-if="form.errors.password" class="mt-2 text-sm text-red-600">[m
[32m+[m[32m          {{ form.errors.password }}[m
[32m+[m[32m        </p>[m
       </div>[m
[32m+[m
       <div>[m
[31m-        <label class="block text-sm mb-1">Confirm new password</label>[m
[31m-        <input v-model="form.password_confirmation" type="password" class="w-full border rounded px-3 py-2" />[m
[32m+[m[32m        <label for="password_confirmation" class="block text-sm font-medium text-gray-700">[m
[32m+[m[32m          Confirm new password[m
[32m+[m[32m        </label>[m
[32m+[m[32m        <input[m
[32m+[m[32m          v-model="form.password_confirmation"[m
[32m+[m[32m          id="password_confirmation"[m
[32m+[m[32m          name="password_confirmation"[m
[32m+[m[32m          type="password"[m
[32m+[m[32m          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm shadow-sm focus:border-black focus:ring-black"[m
[32m+[m[32m        />[m
[32m+[m[32m        <p v-if="form.errors.password_confirmation" class="mt-2 text-sm text-red-600">[m
[32m+[m[32m          {{ form.errors.password_confirmation }}[m
[32m+[m[32m        </p>[m
       </div>[m
 [m
[31m-      <button :disabled="submitting" class="px-4 py-2 rounded bg-black text-white disabled:opacity-50">[m
[31m-        {{ submitting ? 'Saving…' : 'Save' }}[m
[31m-      </button>[m
[32m+[m[32m      <div class="pt-2">[m
[32m+[m[32m        <button[m
[32m+[m[32m          type="submit"[m
[32m+[m[32m          :disabled="form.processing"[m
[32m+[m[32m          class="inline-flex items-center rounded-md bg-black px-4 py-2 text-sm font-semibold text-white hover:bg-gray-800 disabled:opacity-50"[m
[32m+[m[32m        >[m
[32m+[m[32m          <span v-if="form.processing">Saving…</span>[m
[32m+[m[32m          <span v-else>Save</span>[m
[32m+[m[32m        </button>[m
[32m+[m
[32m+[m[32m        <span v-if="form.recentlySuccessful" class="ml-3 text-sm text-green-600">[m
[32m+[m[32m          Saved.[m
[32m+[m[32m        </span>[m
[32m+[m[32m      </div>[m
     </form>[m
[31m-  </main>[m
[32m+[m[32m  </div>[m
 </template>[m
[1mdiff --git a/resources/js/routes/appearance/index.ts b/resources/js/routes/appearance/index.ts[m
[1mindex d4f0573..ff77e4e 100644[m
[1m--- a/resources/js/routes/appearance/index.ts[m
[1m+++ b/resources/js/routes/appearance/index.ts[m
[36m@@ -1,4 +1,3 @@[m
[31m-// resources/js/routes/appearance/index.ts[m
 import { queryParams, type RouteQueryOptions, type RouteDefinition } from '../../wayfinder'[m
 [m
 /** GET /settings/appearance */[m
[36m@@ -8,18 +7,5 @@[m [mexport const edit = (o?: RouteQueryOptions): RouteDefinition<'get'> => ({[m
 })[m
 edit.definition = { methods: ['get', 'head'], url: '/settings/appearance' } as const[m
 edit.url  = (o?: RouteQueryOptions) => edit.definition.url + queryParams(o)[m
[31m-edit.get  = (o?: RouteQueryOptions): RouteDefinition<'get'>  => ({ url: edit.url(o),  method: 'get'  })[m
[32m+[m[32medit.get  = (o?: RouteQueryOptions): RouteDefinition<'get'>  => ({ url: edit.url(o),  method: 'get' })[m
 edit.head = (o?: RouteQueryOptions): RouteDefinition<'head'> => ({ url: edit.url(o),  method: 'head' })[m
[31m-[m
[31m-[m
[31m-/** PUT /settings/appearance */[m
[31m-export const update = (o?: RouteQueryOptions): RouteDefinition<'put'> => ({[m
[31m-  url: update.url(o),[m
[31m-  method: 'put',[m
[31m-})[m
[31m-update.definition = { method: 'put' as const, url: '/settings/appearance' } as const[m
[31m-update.url = (o?: RouteQueryOptions) => update.definition.url + queryParams(o)[m
[31m-[m
[31m-/** Default export bundle (so `import appearance from '@/routes/appearance'` works) */[m
[31m-const appearanceRoutes = { edit, update }[m
[31m-export default appearanceRoutes[m
[1mdiff --git a/resources/js/routes/index.ts b/resources/js/routes/index.ts[m
[1mindex 7c9cffc..42614db 100644[m
[1m--- a/resources/js/routes/index.ts[m
[1m+++ b/resources/js/routes/index.ts[m
[36m@@ -5,23 +5,14 @@[m [mimport {[m
   type RouteDefinition,[m
 } from '../wayfinder'[m
 [m
[31m-// === Central re-exports for leaf modules ===[m
[32m+[m[32m// central re-exports (leaf modules live in their own folders)[m
[32m+[m[32mexport * from './dashboard'                      // exports { dashboard }[m
 export * as appearance from './appearance'       // exposes { edit }[m
 export * as userPassword from './user/password'  // exposes { edit, update }[m
[31m-export * as profile from './profile'             // exposes { edit, update, destroy }[m
[32m+[m[32mexport * from './profile'                        // exposes { edit, update, destroy }[m
 export * from './verification'                   // exposes { send }[m
 [m
[31m-// --------- Top-level leaf routes ----------[m
[31m-[m
[31m-/** GET /dashboard */[m
[31m-export const dashboard = (o?: RouteQueryOptions): RouteDefinition<'get'> => ({[m
[31m-  url: dashboard.url(o),[m
[31m-  method: 'get',[m
[31m-})[m
[31m-dashboard.definition = { methods: ['get', 'head'], url: '/dashboard' } as const[m
[31m-dashboard.url  = (o?: RouteQueryOptions) => dashboard.definition.url + queryParams(o)[m
[31m-dashboard.get  = (o?: RouteQueryOptions): RouteDefinition<'get'>  => ({ url: dashboard.url(o), method: 'get' })[m
[31m-dashboard.head = (o?: RouteQueryOptions): RouteDefinition<'head'> => ({ url: dashboard.url(o), method: 'head' })[m
[32m+[m[32m// Example top-level helpers:[m
 [m
 /** GET /login */[m
 export const login = (o?: RouteQueryOptions): RouteDefinition<'get'> => ({[m
[36m@@ -39,5 +30,5 @@[m [mexport const logout = (o?: RouteQueryOptions): RouteDefinition<'post'> => ({[m
   method: 'post',[m
 })[m
 logout.definition = { methods: ['post'], url: '/logout' } as const[m
[31m-logout.url = (o?: RouteQueryOptions) => logout.definition.url + queryParams(o)[m
[32m+[m[32mlogout.url  = (o?: RouteQueryOptions) => logout.definition.url + queryParams(o)[m
 logout.post = (o?: RouteQueryOptions): RouteDefinition<'post'> => ({ url: logout.url(o), method: 'post' })[m
[1mdiff --git a/resources/js/routes/user/password.ts b/resources/js/routes/user/password.ts[m
[1mindex 8bab429..6255334 100644[m
[1m--- a/resources/js/routes/user/password.ts[m
[1m+++ b/resources/js/routes/user/password.ts[m
[36m@@ -2,24 +2,20 @@[m
 import { queryParams, type RouteQueryOptions, type RouteDefinition } from '../../wayfinder'[m
 [m
 /** GET /user/password */[m
[31m-export const edit = (o?: RouteQueryOptions): RouteDefinition<'get'> => ({[m
[31m-  url: edit.url(o),[m
[32m+[m[32mexport const edit = (options?: RouteQueryOptions): RouteDefinition<'get'> => ({[m
[32m+[m[32m  url: edit.url(options),[m
   method: 'get',[m
 })[m
 edit.definition = { methods: ['get', 'head'], url: '/user/password' } as const[m
[31m-edit.url  = (o?: RouteQueryOptions) => edit.definition.url + queryParams(o)[m
[31m-edit.get  = (o?: RouteQueryOptions): RouteDefinition<'get'>  => ({ url: edit.url(o),  method: 'get'  })[m
[31m-edit.head = (o?: RouteQueryOptions): RouteDefinition<'head'> => ({ url: edit.url(o),  method: 'head' })[m
[32m+[m[32medit.url = (o?: RouteQueryOptions) => edit.definition.url + queryParams(o)[m
 [m
 /** PUT /user/password */[m
[31m-export const update = (o?: RouteQueryOptions): RouteDefinition<'put'> => ({[m
[31m-  url: update.url(o),[m
[32m+[m[32mexport const update = (options?: RouteQueryOptions): RouteDefinition<'put'> => ({[m
[32m+[m[32m  url: update.url(options),[m
   method: 'put',[m
 })[m
 update.definition = { methods: ['put'], url: '/user/password' } as const[m
 update.url = (o?: RouteQueryOptions) => update.definition.url + queryParams(o)[m
[31m-update.put = (o?: RouteQueryOptions): RouteDefinition<'put'> => ({ url: update.url(o), method: 'put' })[m
[31m-[m
 [m
 // PUT /user/password[m
 export const update = (options?: RouteQueryOptions): RouteDefinition<'put'> => ({[m
[1mdiff --git a/routes/web.php b/routes/web.php[m
[1mindex 4eeac9b..4f979d2 100644[m
[1m--- a/routes/web.php[m
[1m+++ b/routes/web.php[m
[36m@@ -2,22 +2,26 @@[m
 [m
 use Illuminate\Support\Facades\Route;[m
 use Illuminate\Http\Request;[m
[31m-use Inertia\Inertia;[m
[32m+[m[32muse App\Http\Controllers\Settings\AppearanceController;[m
[32m+[m[32muse App\Http\Controllers\Settings\PasswordController;[m
 [m
[31m-// Dev convenience: home redirects to the page[m
[31m-Route::get('/', fn () => redirect('/user/password'));[m
[32m+[m[32mRoute::get('/', fn () => inertia('dashboard'))->name('dashboard.index');[m
 [m
[31m-// Settings: Password page (GET) + submit (PUT)[m
[31m-Route::get('/user/password', fn () => Inertia::render('settings/Password'));[m
[32m+[m[32mRoute::middleware(['auth', 'verified'])->group(function () {[m
[32m+[m[32m    Route::get('/settings/appearance', [AppearanceController::class, 'edit'])[m
[32m+[m[32m        ->name('settings.appearance.edit');[m
 [m
[31m-Route::put('/user/password', function (Request $request) {[m
[31m-    $request->validate([[m
[31m-        'current_password' => ['required'],[m
[31m-        'password'         => ['required', 'confirmed', 'min:8'],[m
[31m-    ]);[m
[31m-    // TODO: actually update the password[m
[31m-    return back()->with('success', 'Password updated');[m
[32m+[m[32m    Route::get('/user/password', [PasswordController::class, 'edit'])[m
[32m+[m[32m        ->name('password.edit');[m
[32m+[m
[32m+[m[32m    Route::put('/user/password', [PasswordController::class, 'update'])[m
[32m+[m[32m        ->name('password.update');[m
[32m+[m
[32m+[m[32m    Route::post('/email/verification-notification', function (Request $request) {[m
[32m+[m[32m        if ($request->user()->hasVerifiedEmail()) return back();[m
[32m+[m[32m        $request->user()->sendEmailVerificationNotification();[m
[32m+[m[32m        return back()->with('status', 'verification-link-sent');[m
[32m+[m[32m    })->name('verification.send');[m
 });[m
 [m
[31m-// Simple health check[m
 Route::get('/ping', fn () => 'pong');[m
[1mdiff --git a/tsconfig.json b/tsconfig.json[m
[1mindex 68d2148..8389a0b 100644[m
[1m--- a/tsconfig.json[m
[1m+++ b/tsconfig.json[m
[36m@@ -8,12 +8,22 @@[m
     "skipLibCheck": true,[m
     "esModuleInterop": true,[m
     "forceConsistentCasingInFileNames": true,[m
[32m+[m
     "baseUrl": ".",[m
[31m-    "paths": { "@/*": ["resources/js/*"] },[m
[32m+[m[32m    "paths": {[m
[32m+[m[32m      "@/*": ["resources/js/*"][m
[32m+[m[32m    },[m
[32m+[m
     "jsx": "preserve",[m
     "types": ["vite/client"],[m
     "noEmit": true,[m
[31m-    "isolatedModules": true[m
[32m+[m[32m    "isolatedModules": true,[m
[32m+[m
[32m+[m[32m    "resolveJsonModule": true[m
   },[m
[31m-  "include": ["resources/**/*.ts", "resources/**/*.vue", "resources/**/*.d.ts"][m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m  "include": [[m
[32m+[m[32m    "resources/**/*.ts",[m
[32m+[m[32m    "resources/**/*.d.ts",[m
[32m+[m[32m    "resources/**/*.vue"[m
[32m+[m[32m  ][m
[32m+[m[32m}[m
