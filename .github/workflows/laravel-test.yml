name: tests

on:
  push:
    branches: [ main, feature/** ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      APP_ENV: testing
      APP_KEY: base64:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA= # replaced at key:generate
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array
      LOG_CHANNEL: stack
      DB_CONNECTION: sqlite
      DB_DATABASE: /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/database/database.sqlite

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer:v2
          coverage: none

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache/files
            vendor
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      - name: Install PHP dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Prepare environment
        run: |
          cp .env.example .env || true
          php artisan key:generate --force
          mkdir -p database
          touch "$DB_DATABASE"

      - name: Run migrations (sqlite)
        run: php artisan migrate --no-interaction -v

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node deps
        run: |
          npm ci --no-audit --no-fund || npm i --no-audit --no-fund
          
      - name: Build (optional)
        run: npm run build --if-present

      - name: PHP Unit tests
        run: vendor/bin/phpunit --testdox || php artisan test --parallel --recreate-database
